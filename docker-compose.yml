services:
  db:
    image: postgres:13
    networks:
      - schools_network
    container_name: db
    environment:
      POSTGRES_DB: schools_db
      POSTGRES_USER: schools_user
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U schools_user -d schools_db || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  api:
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - schools_network
    ports:
      - "80:80"
    expose:
      - "80"
    env_file:
      - .env
    environment:
      POSTGRES_DB: schools_db
      POSTGRES_USER: schools_user
    depends_on:
      db:
        condition: service_healthy

  data_mapper:
    build:
      context: .
      dockerfile: Dockerfile.mapper
    networks:
      - schools_network
    env_file:
      - .env
    environment:
      POSTGRES_DB: schools_db
      POSTGRES_USER: schools_user
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./schools.csv:/app/schools.csv:ro

volumes:
  postgres_data:

networks:
  schools_network:
    driver: bridge
